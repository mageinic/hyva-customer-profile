<?php
/**
 * MageINIC
 * Copyright (C) 2023 MageINIC <support@mageinic.com>
 *
 * NOTICE OF LICENSE
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see https://opensource.org/licenses/gpl-3.0.html.
 *
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 *
 * @category MageINIC
 * @package Hyva_MageINICCustomerProfile
 * @copyright Copyright (c) 2023 MageINIC (https://www.mageinic.com/)
 * @license https://opensource.org/licenses/gpl-3.0.html GNU General Public License,version 3 (GPL-3.0)
 * @author MageINIC <support@mageinic.com>
 */

use Hyva\Theme\Model\ViewModelRegistry;
use Magento\Customer\Block\Form\Register;
use Magento\Framework\Escaper;
use MageINIC\CustomerProfile\ViewModel\Profile;

/**
 * @var Register $block
 * @var Escaper $escaper
 * @var ViewModelRegistry $viewModels
 */

$viewModel = $viewModels->require(Profile::class);
$helper = $viewModel->getCustomerProfileHelper();
$enable = $helper->getEnableModule();
?>

<fieldset class="fieldset create account">
    <legend class="legend">
        <span><?= $escaper->escapeHtml(__('Additional Information')) ?></span>
    </legend>
    <?php if ($enable): ?>
        <div class="flex">
            <div class="mb-4 p-4 text-sm w-40">
                <div class="" x-data="previewImage()">
                    <label for="logo">
                        <div class="w-full h-30 rounded bg-gray-100 border border-gray-200
                         flex items-center justify-center overflow-hidden">
                            <img x-show="imageUrl" :src="imageUrl" class="w-full object-cover">
                            <div x-show="!imageUrl" class="text-gray-300 flex flex-col items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 " fill="none"
                                     viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                    <path stroke-linecap="round" stroke-linejoin="round"
                                          d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011
                                           9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                                </svg>
                                <div>Image Preview</div>
                            </div>
                        </div>
                    </label>
                    <div>
                        <label for="profile_picture" class="block mb-2 mt-4 font-bold">Upload image..</label>
                        <input class="w-full cursor-pointer" type="file" name="profile_picture" id="profile_picture"
                               accept=".png, .jpg, .jpeg" @change="fileChosen">
                        <div x-show="invalidFile" class="text-red-500 text-sm mt-2">
                            Invalid file type. Please choose a valid image file.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    <?php endif; ?>
</fieldset>
<script>
    function previewImage() {
        return {
            imageUrl: "",
            invalidFile: false,
            allowedExtensions: ["jpg", "jpeg", "png"],
            fileChosen(event) {
                const file = event.target.files[0];
                this.invalidFile = this.isInvalidExtension(file);
                if (!this.invalidFile) {
                    this.fileToDataUrl(file, (src) => (this.imageUrl = src));
                }
            },
            fileToDataUrl(file, callback) {
                if (!file) return;
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = (e) => callback(e.target.result);
            },
            isInvalidExtension(file) {
                if (!file) return false;
                const extension = this.getFileExtension(file.name).toLowerCase();
                return !this.allowedExtensions.includes(extension);
            },
            getFileExtension(fileName) {
                return fileName.slice(((fileName.lastIndexOf(".") - 1) >>> 0) + 2);
            },
        };
    }
</script>
